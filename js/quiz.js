document.addEventListener("DOMContentLoaded", function () {
    const quizData = [
        { question: "–°—Ç–æ–ª–∏—Ü–∞ –§—Ä–∞–Ω—Ü–∏–∏?", options: ["–ë–µ—Ä–ª–∏–Ω", "–ú–∞–¥—Ä–∏–¥", "–ü–∞—Ä–∏–∂", "–†–∏–º"], correct: 2 },
        { question: "2 + 2 = ?", options: ["3", "4", "5", "22"], correct: 1 },
        { question: "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –≤ —Ñ–ª–∞–≥–µ –†–æ—Å—Å–∏–∏ —Å–≤–µ—Ä—Ö—É?", options: ["–ë–µ–ª—ã–π", "–°–∏–Ω–∏–π", "–ö—Ä–∞—Å–Ω—ã–π"], correct: 0 },
        { question: "HTML —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫?", options: ["Hyper Text Markup Language", "Home Tool Markup Language", "Hyperlinks and Text Mark Language"], correct: 0 },
        { question: "–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–º –≥–æ–¥—É?", options: ["365", "366", "367"], correct: 1 },
        { question: "–ö–∞–∫–æ–π –æ–∫–µ–∞–Ω —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π?", options: ["–ò–Ω–¥–∏–π—Å–∫–∏–π", "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "–¢–∏—Ö–∏–π"], correct: 2 },
        { question: "–ö–∞–∫–æ–π –≥–∞–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –¥—ã—Ö–∞–Ω–∏—è?", options: ["–ö–∏—Å–ª–æ—Ä–æ–¥", "–ê–∑–æ—Ç", "–£–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑"], correct: 0 },
        { question: "CSS –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞...", options: ["—Å—Ç—Ä—É–∫—Ç—É—Ä—É", "—Å—Ç–∏–ª–∏", "–¥–∏–Ω–∞–º–∏–∫—É"], correct: 1 },
        { question: "–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ –∫ –°–æ–ª–Ω—Ü—É?", options: ["–ó–µ–º–ª—è", "–ú–µ—Ä–∫—É—Ä–∏–π", "–ú–∞—Ä—Å"], correct: 1 },
        { question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–≥ <a>?", options: ["–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É", "–í—ã–¥–µ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç", "–°–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫—É"], correct: 2 }
    ];

    let currentQuestion = 0;
    let score = 0;
    let bestScore = localStorage.getItem('bestStepQuiz') || 0;

    const startScreen = document.getElementById('startScreen');
    const questionScreen = document.getElementById('questionScreen');
    const resultScreen = document.getElementById('resultScreen');
    const questionText = document.getElementById('questionText');
    const answersContainer = document.getElementById('answersContainer');
    const nextBtn = document.getElementById('nextBtn');
    const resultMessage = document.getElementById('resultMessage');
    const progressBar = document.getElementById('quizProgress');

    document.getElementById('startBtn').addEventListener('click', () => {
        startScreen.classList.add('hidden');
        questionScreen.classList.remove('hidden');
        loadQuestion();
    });

    document.getElementById('restartBtn').addEventListener('click', () => {
        currentQuestion = 0;
        score = 0;
        resultScreen.classList.add('hidden');
        questionScreen.classList.remove('hidden');
        loadQuestion();
    });

    nextBtn.addEventListener('click', () => {
        const selected = document.querySelector('input[name="answer"]:checked');
        if (!selected) return;

        const answer = parseInt(selected.value);
        if (answer === quizData[currentQuestion].correct) {
            score++;
        }

        currentQuestion++;

        if (currentQuestion < quizData.length) {
            loadQuestion();
        } else {
            showResult();
        }
    });

    function loadQuestion() {
        const q = quizData[currentQuestion];
        questionText.textContent = `${currentQuestion + 1}. ${q.question}`;
        answersContainer.innerHTML = '';
        nextBtn.textContent = currentQuestion === quizData.length - 1 ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å' : '–î–∞–ª–µ–µ';
        nextBtn.disabled = true;

        q.options.forEach((opt, i) => {
            const id = `opt_${i}`;
            const label = document.createElement('label');
            label.innerHTML = `<input type="radio" name="answer" id="${id}" value="${i}"> ${opt}`;
            answersContainer.appendChild(label);
        });

        answersContainer.addEventListener('change', () => {
            nextBtn.disabled = false;
        }, { once: true });

        updateProgress();
    }

    function updateProgress() {
        const percent = ((currentQuestion) / quizData.length) * 100;
        progressBar.style.width = percent + '%';
    }

    function showResult() {
        questionScreen.classList.add('hidden');
        resultScreen.classList.remove('hidden');
        progressBar.style.width = '100%';

        const percent = Math.round((score / quizData.length) * 100);
        const isPassed = percent >= 80;

        if (score > bestScore) {
            bestScore = score;
            localStorage.setItem('bestStepQuiz', bestScore);
        }

        resultMessage.className = 'result ' + (isPassed ? 'good' : 'bad');
        resultMessage.innerHTML = `
          <p>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <span>${score}/${quizData.length} (${percent}%)</span></p>
          ${isPassed
                ? `<p>–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üéâ</p>`
                : `<p>–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑, –ø–æ–ª—É—á–∏—Ç—Å—è –ª—É—á—à–µ! üòÖ<br>–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <span>${bestScore}/${quizData.length}</span></p>`}
        `;
    }
})